let decryptData=async(e,r)=>{let t=await new Promise(((e,r)=>{chrome.storage.session.get(["iv"],(t=>{chrome.runtime.lastError?r(chrome.runtime.lastError):e(new Uint8Array(t.iv))}))})),a=new Uint8Array(t),o=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:a},e,new Uint8Array(r));return(new TextDecoder).decode(o)};chrome.runtime.onMessage.addListener(((e,r,t)=>{if("getLoginStorage"===e.action)return chrome.storage.session.get(["email","password","key"],(async e=>{try{const r=await window.crypto.subtle.importKey("raw",new Uint8Array(e.key),{name:"AES-GCM",length:256},!1,["decrypt"]);decryptData(r,e.password).then((r=>{t({email:e.email,password:r})})).catch((e=>{console.error("Decryption failed:",e),t({error:"Decryption failed"})}))}catch(e){console.error("Key import failed:",e),t({error:"Key import failed"})}})),!0}));